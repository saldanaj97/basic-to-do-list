{"ast":null,"code":"var _jsxFileName = \"/Users/juan/Projects/to-do-web/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        term: event.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        term: '',\n        items: [...this.state.items, this.state.term]\n      });\n    };\n\n    this.state = {\n      date: new Date(),\n      // Store the date\n      term: '',\n      // Store what is being passed as a value to input\n      items: [] // Store every value that is being passed to our to-do list\n\n    };\n  } // Function which changes our state depending on the current input value\n\n\n  // Set up the timer whenever app is rendered to the DOM for the first time\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  } // Clear the timer whenever the DOM produced by the App is removed \n\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  } // Update the time every second\n\n\n  tick() {\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Juan's To-Do List\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Today's date is: \", this.state.date.toLocaleDateString()), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" \", this.state.date.toLocaleTimeString(), \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"App\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.term,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Submite\")), React.createElement(List, {\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/juan/Projects/to-do-web/src/App.js"],"names":["React","Component","App","constructor","props","onChange","event","setState","term","target","value","onSubmit","preventDefault","items","state","date","Date","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","render","toLocaleDateString","toLocaleTimeString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACC,SAAxB,CAAiC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAUlBC,QAVkB,GAUNC,KAAD,IAAW;AACpB,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADP,OAAd;AAGD,KAdiB;;AAAA,SAoBlBC,QApBkB,GAoBNL,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACM,cAAN;AACA,WAAKL,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE,EADM;AAEZK,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,KAAf,EAAsB,KAAKC,KAAL,CAAWN,IAAjC;AAFK,OAAd;AAID,KA1BiB;;AAEhB,SAAKM,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EADK;AACqB;AAChCR,MAAAA,IAAI,EAAE,EAFK;AAEqB;AAChCK,MAAAA,KAAK,EAAE,EAHI,CAGqB;;AAHrB,KAAb;AAKD,GAR8B,CAU/B;;;AAoBA;AACAI,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,OAAL,GAAeC,WAAW,CACxB,MAAM,KAAKC,IAAL,EADkB,EAExB,IAFwB,CAA1B;AAID,GApC8B,CAsC/B;;;AACAC,EAAAA,oBAAoB,GAAE;AACpBC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACD,GAzC8B,CA2C/B;;;AACAE,EAAAA,IAAI,GAAE;AACJ,SAAKb,QAAL,CAAc;AACZQ,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AADM,KAAd;AAGD;;AAEDO,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAsB,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,kBAAhB,EAAtB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAM,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,kBAAhB,EAAN,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAsB,MAAA,QAAQ,EAAE,KAAKd,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWN,IAAzB;AAA+B,MAAA,QAAQ,EAAE,KAAKH,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,EAKE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,KAAKS,KAAL,CAAWD,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAJF,CADF;AAcD;;AAjE8B;;AAmEjC,eAAeX,GAAf","sourcesContent":["import React, { Component } from 'react'; \nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      date: new Date(),               // Store the date\n      term: '',                       // Store what is being passed as a value to input\n      items: []                       // Store every value that is being passed to our to-do list\n    };\n  }\n\n  // Function which changes our state depending on the current input value\n  onChange = (event) => {\n    this.setState({\n      term: event.target.value\n    });\n  }\n\n  /* Function that cleans input field after submit is triggered, pushes\n   * every term to the arrray of items and the prevent default stops \n   * the default action of an element from happening \n  */\n  onSubmit = (event) => {\n    event.preventDefault()\n    this.setState({\n      term: '',\n      items: [...this.state.items, this.state.term]\n    });\n  }\n\n  \n  // Set up the timer whenever app is rendered to the DOM for the first time\n  componentDidMount(){\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  // Clear the timer whenever the DOM produced by the App is removed \n  componentWillUnmount(){\n    clearInterval(this.timerID);\n  }\n\n  // Update the time every second\n  tick(){\n    this.setState({\n      date: new Date()\n    });\n  }\n\n  render(){\n    return(\n      <div className=\"Heading\">\n        <h1>Juan's To-Do List</h1>\n        <h2>Today's date is: {this.state.date.toLocaleDateString()}</h2>\n        <h2> {this.state.date.toLocaleTimeString()} </h2>\n        <div>\n          <form className=\"App\" onSubmit={this.onSubmit}>\n            <input value={this.state.term} onChange={this.onChange} />\n            <button>Submite</button>\n          </form>\n          <List items={this.state.items} />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}